package de.safe_ev.transparenzsoftware;

import static org.junit.Assert.assertEquals;

import java.util.regex.Pattern;

import org.junit.Test;

public class AppOCMF_RSA_Test extends AbstractAppTest {

    @Test
    public void test_ocmf_rsa_01() throws Exception {
	chooseFile(testDirXML, "test_ocmf_rsa_01.xml");
	final String pubKey = getWindow().textBox("text.pubkey").text();

	delayForVerify();
	final int index = pubKey.indexOf(
		"820122300D06092A864886F70D01010105000382010F003082010A0282010100AFB7132688B62CD01B240B9B21CAD44BBFDABBA0E593D2697660998260127143F1936B278D454AD4E8C2D895851ECAD664F379BAD0EACE98CAFFF52A9F0647B50EB57E4F995E93867C2E13C46F673AE7313800194F941F1D9BC04BB560002E2035BF48B003EF0DE964884324AD40F2E8637159760E7349EE1CEB6FF586947E2F3079B72343B13E0D4ED8AC977817834FFF638BDBD4E037AF849AB757ACB2611D0D8D65EC77C880606FAA060ADA10DB5E35484BD2FAA14DD4BC634E87296880A0C68763B5B2116A66B66190213EA7658CCDB89AA7A3910DD56198033DB5BD5989D7C3C71D91284B15B2973260033351146A2895308C00EB0A94530643E8327FD90203010001");

	assertEquals(2, index);
	getWindow().label("lbl.icon").requireText(Daten_wurden_verifiziert);
	getWindow().label("lbl.meter").requireText(Pattern.compile(".*11,43432 kWh.*"));
	delay();
    }

}
